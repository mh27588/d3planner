!function(){function s(){S.hide(),y.hide(),g=c.scrollTop();var s=DiabloCalc.charClass;u.empty(),u.removeClass().addClass("class-"+s),k=[],D=[];for(var i in DiabloCalc.legendaryGems)delete DiabloCalc.legendaryGems[i].line;for(var l in DiabloCalc.itemaffixes)delete DiabloCalc.itemaffixes[l].line;for(a=0;a<6;++a)k.push(new DiabloCalc.SkillBox.skill(u,a)),k[a].header.click(function(s){return function(i){S.show(s,i)}}(k[a])).contextmenu(function(s){return function(){return s.setSkill(),DiabloCalc.trigger("updateSkills",!0),!1}}(k[a]));u.append('<h3 class="skill-category">'+n("Passives")+"</h3>");for(var a=0;a<4;++a)D.push(new DiabloCalc.SkillBox.passive(u,a)),D[a].header.click(function(s){return function(i){y.show(s,i)}}(D[a])).contextmenu(function(s){return function(){return s.setPassive(),DiabloCalc.trigger("updateSkills",!0),!1}}(D[a]));var e=$('<div><h3 class="skill-category" style="margin-top: 10px">'+n("Granted by Hellfire Amulet")+"</h3></div>").hide();u.append(e),(b=new DiabloCalc.SkillBox.passive(e,-1)).section=e,v=$('<div><h3 class="skill-category">'+n("Legendary Gems")+"</h3></div>").hide(),u.append(v),C=$('<div><h3 class="skill-category">'+n("Item Effects")+"</h3></div>").hide(),u.append(C),d.empty(),d.append('<h3 class="skill-category">'+n("Kanai's Cube")+"</h3>"),m={weapon:new DiabloCalc.SkillBox.kanai(d,"weapon"),armor:new DiabloCalc.SkillBox.kanai(d,"armor"),jewelry:new DiabloCalc.SkillBox.kanai(d,"jewelry")},S.setClass(s),y.setClass(s),DiabloCalc.trigger("updateSkills")}function i(s){if(!s||DiabloCalc.skills[DiabloCalc.charClass][s[0]])return s;var i=DiabloCalc.skills[DiabloCalc.charClass];for(var l in i)if(i[l].oldid===s[0])return[l,s[1]]}function l(s){if(!s||DiabloCalc.passives[DiabloCalc.charClass][s])return s;var i=DiabloCalc.passives[DiabloCalc.charClass];for(var l in i)if(i[l].oldid===s)return l}function a(s,i,l){if(s)for(var a in s)i.add(a,s[a],1,l)}function e(s){if("followers"!==s.type&&"shrines"!==s.type){var i=DiabloCalc.partybuffs[s.index].class;for(var l in DiabloCalc.classes)s.header.toggleClass("class-"+l,l===i),s.tab.toggleClass("class-"+l,l===i);if(s.header.toggleClass("class-icon",!!i),s.header.toggleClass("icon-coop",!i),s.tab.children().detach(),s.class){if(s.tab.append(s.class,s.clsChosen),!DiabloCalc.noChosen){var a=s.clsChosen.find("span").first();for(var l in DiabloCalc.classes)a.toggleClass("class-"+l,l===i);a.toggleClass("class-icon",!!i)}s.class.val(i),s.class.trigger("chosen:updated")}else{s.class=$('<select class="buff-class"><option value="">'+(DiabloCalc.noChosen?n("Select Class"):"")+"</option></select>");for(var l in DiabloCalc.classes)DiabloCalc.classes[l].follower||s.class.append('<option value="'+l+'" class="class-icon class-'+l+'">'+DiabloCalc.classes[l].name+"</option>");s.tab.append(s.class),s.class.chosen({allow_single_deselect:!0,disable_search:!0,inherit_select_classes:!0,placeholder_text_single:n("Select Class")}).change(function(){var i=s.class.val();if(!DiabloCalc.noChosen){var l=s.clsChosen.find("span").first();for(var a in DiabloCalc.classes)l.toggleClass("class-"+a,a===i);l.toggleClass("class-icon",!!i)}DiabloCalc.partybuffs[s.index].class=i,e(s),DiabloCalc.trigger("updateSkills",!0)}),DiabloCalc.noChosen||(s.clsChosen=s.class.next())}$.each(DiabloCalc.partybuffs[s.index].items,function(l,a){(!a.classes||a.classes.indexOf(i)>=0)&&(a.skillbox?s.tab.append(a.skillbox.line):a.skillbox=new DiabloCalc.SkillBox.buff(s.tab,a),a.skillbox.updateBoxes())}),i&&$.each(DiabloCalc.partybuffs[s.index][i],function(i,l){l.skillbox?s.tab.append(l.skillbox.line):l.skillbox=new DiabloCalc.SkillBox.buff(s.tab,l),l.skillbox.updateBoxes()})}else{var t;$.each("followers"===s.type?DiabloCalc.followerbuffs:DiabloCalc.shrinebuffs,function(i,l){l.skillbox||(t!=l.category&&(t=l.category,s.tab.append("<h3>"+t+"</h3>")),l.skillbox=new DiabloCalc.SkillBox.buff(s.tab,l)),l.skillbox.updateBoxes()})}}function t(){for(var s=0;s<x.length;++s)e(x[s])}function o(s,i){if(s.deltaY||s.deltaFactor){var l=$(this),a=l.scrollTop()-s.deltaY*s.deltaFactor;if(this.scrollHeight<=l.outerHeight()+1||a>this.scrollHeight-l.outerHeight())return;if(c.is(this)&&a<0)return;return l.scrollTop(a),s.stopPropagation(),!1}}var n=DiabloCalc.locale("ui-skills.js"),c=$("#tab-skills");c=DiabloCalc.addScroll(c,"y");var r=$("<input></input>").attr("type","checkbox").change(function(){f.toggle(!!this.checked),DiabloCalc.trigger("updateStats")}),p=$("<input></input>").attr("type","checkbox").change(function(){DiabloCalc.trigger("updateStats")}),h=$("<select></select>");h.append('<option value="">'+n("Generic")+"</option>"),h.append('<option value="demons">'+n("Demon")+"</option>"),h.append('<option value="beasts">'+n("Beast")+"</option>"),h.append('<option value="humans">'+n("Human")+"</option>"),h.append('<option value="undead">'+n("Undead")+"</option>");var f=$('<label style="margin-left: 8px">'+n("Boss")+"</label>").prepend(p).hide();DiabloCalc.addOption("showElites",function(){return r.prop("checked")},function(s){r.prop("checked",s),f.toggle(!!s)}),DiabloCalc.addOption("targetBoss",function(){return p.prop("checked")},function(s){p.prop("checked",s),DiabloCalc.trigger("updateStats")}),DiabloCalc.addOption("targetType",function(){return h.val()},function(s){h.val(s),h.trigger("chosen:updated"),DiabloCalc.trigger("updateStats")}),c.append($('<span class="option-box">'+n("Target: ")+"</span>").append(h,$('<label style="margin-left: 8px">'+n("Elite")+"</label>").prepend(r),f)),h.change(function(){DiabloCalc.trigger("updateStats")});var u,d,b,v,C,g,k=[],D=[],x=[],m={},S=new function(){this.enable=function(s,i){var l=DiabloCalc.skills[DiabloCalc.charClass][s];this.skills[s].css("background-position",-42*l.col+"px "+(-84*l.row-(i?0:42))+"px")},this.selectRune=function(s){this.rune&&this.runes[this.rune].removeClass("selected"),this.selRune=s,this.rune&&this.runes[this.rune].addClass("selected")},this.onRuneClicked=function(s){this.slot&&this.rune!==s&&(this.slot.setSkill([this.skill,s]),DiabloCalc.trigger("updateSkills",!0)),this.hide()},this.selectSkill=function(s){if(this.popup.toggleClass("expanded",!!s),this.skill&&(this.skills[this.skill].removeClass("selected"),this.enable(this.skill,!0)),this.skill=s,this.skill&&(this.skills[this.skill].addClass("selected"),this.enable(this.skill,!1)),this.runeList&&(this.selectRune(),this.runeList.empty(),this.runes={},s)){var i=this,l=DiabloCalc.skills[DiabloCalc.charClass][s];this.runes.x=$('<span class="skill-popup-rune-line"><span class="skill-popup-rune-x"></span>'+n("No Rune")+"</span>"),this.runes.x.hover(function(){DiabloCalc.tooltip.showSkill(this,DiabloCalc.charClass,s)},function(){DiabloCalc.tooltip.hide()}).click(function(){i.onRuneClicked("x")}),this.runeList.append(this.runes.x),$.each(l.runes,function(l,a){i.runes[l]=$('<span class="skill-popup-rune-line"><span class="skill-popup-rune-'+l+'"></span>'+a+"</span>"),i.runes[l].hover(function(){DiabloCalc.tooltip.showSkill(this,DiabloCalc.charClass,s,l,!0)},function(){DiabloCalc.tooltip.hide()}).click(function(){i.onRuneClicked(l)}),i.runeList.append(i.runes[l])}),i.selectRune("x")}},this.onSkillClicked=function(s){this.skill!=s&&this.slot&&!this.disabled[s]&&(this.selectSkill(s),this.slot.setSkill([this.skill,"x"]),DiabloCalc.trigger("updateSkills",!0))},this.hide=function(){this.selectSkill(),this.slot&&(this.slot.line.removeClass("selected"),this.prevSlot=this.slot,setTimeout(function(s){setTimeout(function(s){s.prevSlot=void 0},0,s)},0,this)),this.slot=void 0,this.popup.removeClass("expanded"),this.popup.hide(),DiabloCalc.tooltip.hide(),DiabloCalc.hidePopup(this)},this.show=function(s,i){if(s!==this.prevSlot){if(this.hide(),this.slot=s,s.line.addClass("selected"),i)this.popup.css("left",i.pageX+20),this.popup.css("top",Math.max(60,i.pageY-300));else{var l=s.header.offset();this.popup.css("left",l.left+s.header.width()-250),this.popup.css("top",Math.max(60,l.top+s.header.height()-300))}this.disabled={};for(var a={},e=0;e<k.length;++e)k[e]!==s&&k[e].skill&&(this.disabled[k[e].skill[0]]=!0,(o=DiabloCalc.skills[DiabloCalc.charClass][k[e].skill[0]])&&o.exclusive&&(a[o.exclusive]=k[e].skill[0]));for(var t in this.skills){var o=DiabloCalc.skills[DiabloCalc.charClass][t];s===k[0]&&o&&o.nolmb&&(this.disabled[t]=!0),o&&o.exclusive&&a[o.exclusive]&&a[o.exclusive]!==t&&(this.disabled[t]=!0),this.enable(t,!this.disabled[t])}s.skill&&(this.selectSkill(s.skill[0]),this.selectRune(s.skill[1])),this.popup.show(),this.popup.focus(),DiabloCalc.showPopup(this,!0)}else this.hide()},this.setClass=function(s){this.popup.empty(),this.skills={},this.popup.removeClass().addClass("skill-popup class-"+s);var i=this;$.each(DiabloCalc.skills[s],function(l,a){i.skills[l]=$('<span class="skill-icon skill-button"><span class="skill-frame"></span></span>').css({"background-position":-42*a.col+"px "+-84*a.row+"px",left:10+48*a.col,top:10+48*a.row}).click(function(){i.onSkillClicked(l)}).hover(function(){DiabloCalc.tooltip.showSkill(this,s,l)},function(){DiabloCalc.tooltip.hide()}),DiabloCalc.enableTouch(i.skills[l]),i.popup.append(i.skills[l])}),this.runeList=$('<div class="rune-list"></div>'),this.popup.append(this.runeList)},this.contains=function(s){return!(!this.popup.is(s)&&!this.popup.has(s).length)},this.popup=$('<div class="skill-popup" tabIndex="-1"></div>').hide(),this.skills={},this.disabled={},this.runes={},$("body").append(this.popup)},y=new function(){this.hide=function(){this.slot&&(this.slot.line.removeClass("selected"),this.prevSlot=this.slot,setTimeout(function(s){setTimeout(function(s){s.prevSlot=void 0},0,s)},0,this)),this.slot=void 0,this.popup.hide(),DiabloCalc.tooltip.hide(),DiabloCalc.hidePopup(this)},this.show=function(s,i){if(s!==this.prevSlot){if(this.hide(),this.slot=s,s.line.addClass("selected"),i)this.popup.css("left",i.pageX+20),this.popup.css("top",Math.max(60,i.pageY-this.height));else{var l=s.header.offset();this.popup.css("left",l.left+s.header.width()-185),this.popup.css("top",Math.max(60,l.top+s.header.height()-this.height))}this.disabled={};for(var a=0;a<D.length;++a)D[a].passive&&(this.disabled[D[a].passive]=!0);for(var e in this.passives){var t=-42*DiabloCalc.passives[DiabloCalc.charClass][e].index;this.passives[e].toggleClass("selected",!!this.disabled[e]),this.passives[e].css("background-position",t+"px "+(this.disabled[e]?-42:0)+"px")}this.popup.show(),this.popup.focus(),DiabloCalc.showPopup(this,!0)}else this.hide()},this.onClick=function(s){this.slot&&!this.disabled[s]&&(this.slot.setPassive(s),DiabloCalc.trigger("updateSkills",!0),this.hide())},this.setClass=function(s){this.popup.empty(),this.passives={},this.popup.removeClass().addClass("passive-popup class-"+s);var i=Object.keys(DiabloCalc.passives[s]).length;this.height=59*Math.ceil(i/3)+12,this.popup.css("height",this.height);var l=this;$.each(DiabloCalc.passives[s],function(a,e){var t=$('<span class="passive-icon passive-button"><span class="passive-frame"></span></span>').css("background-position",-42*e.index+"px 0");e.index>=3*Math.floor(i/3)?1==i%3?t.css("left",74):t.css("left",45+e.index%3*59):t.css("left",15+e.index%3*59),t.css("top",15+59*Math.floor(e.index/3)),t.click(function(){l.onClick(a)}).hover(function(){DiabloCalc.tooltip.showSkill(this,s,a)},function(){DiabloCalc.tooltip.hide()}),l.passives[a]=t,DiabloCalc.enableTouch(t),l.popup.append(t)})},this.contains=function(s){return!(!this.popup.is(s)&&!this.popup.has(s).length)},this.popup=$('<div class="passive-popup" tabIndex="-1"></div>').hide(),this.passives={},this.disabled={},$("body").append(this.popup)};DiabloCalc.register("editSkill",function(s){$(".editframe").tabs("option","active",2),k[s].line.get(0).scrollIntoView(),setTimeout(function(){S.show(k[s])},0)}),DiabloCalc.register("editPassive",function(s){$(".editframe").tabs("option","active",2),D[s].line.get(0).scrollIntoView(),setTimeout(function(){y.show(D[s])},0)}),DiabloCalc.register("editKanai",function(s){var i=$(".editframe").tabs("option","active");0!==i&&2!==i&&$(".editframe").tabs("option","active",2),m[s].line.get(0).scrollIntoView(),setTimeout(function(){m[s].namebox.trigger("chosen:open")},0)}),DiabloCalc.setSkill=function(s,l){s>=0&&s<k.length&&(k[s].setSkill(i(l)),DiabloCalc.trigger("updateSkills"))},DiabloCalc.getSkill=function(s){return s>=0&&s<k.length?k[s].skill:null},DiabloCalc.setPassive=function(s,i){s>=0&&s<D.length&&(D[s].setPassive(l(i)),DiabloCalc.trigger("updateSkills"))},DiabloCalc.getPassive=function(s){return s>=0&&s<D.length?D[s].passive:null},DiabloCalc.getSkills=function(){var s={};s.skills=[];for(i=0;i<k.length;++i)s.skills.push(k[i].skill);s.passives=[];for(var i=0;i<D.length;++i)s.passives.push(D[i].passive);s.kanai={};for(var l in m){var a=m[l].getItemPair();a&&(s.kanai[l]=a)}return s},DiabloCalc.setSkills=function(s){if(s.skills){for(a=0;a<k.length&&a<s.skills.length;++a)k[a].setSkill(i(s.skills[a]));for(a=s.skills.length;a<k.length;++a)k[a].setSkill()}if(s.passives){for(a=0;a<D.length&&a<s.passives.length;++a)D[a].setPassive(l(s.passives[a]));for(var a=s.passives.length;a<D.length;++a)D[a].setPassive()}if(s.kanai)for(var e in s.kanai)m[e]&&m[e].setItemPair(s.kanai[e])},DiabloCalc.isSkillActive=function(s){for(i=0;i<k.length;i++)if(k[i].skill&&k[i].skill[0]===s)return DiabloCalc.skills[DiabloCalc.charClass][s].active;for(var i=0;i<D.length;i++)if(s===D[i].passive)return!1!==DiabloCalc.passives[DiabloCalc.charClass][s].active;return s===b.passive&&!1!==DiabloCalc.passives[DiabloCalc.charClass][s].active},DiabloCalc.addSkillList=function(s){for(i=0;i<k.length;i++)k[i].skill&&(s.skills[k[i].skill[0]]=k[i].skill[1]);for(var i=0;i<D.length;i++)D[i].passive&&(s.passives[D[i].passive]=!0);s.extra_passive&&DiabloCalc.passives[DiabloCalc.charClass][s.extra_passive]&&(s.passives[s.extra_passive]=!0)},DiabloCalc.addExtraAffixes=function(s){for(var i in m){var l=m[i].getItemAffix();l&&(s[l]=m[i].getItemAffixValue())}},DiabloCalc.addSkillBonuses=function(s){DiabloCalc.addSkillList(s);for(var i=["mantraofsalvation","mantraofretribution","mantraofhealing","mantraofconviction"],l=0;l<k.length;++l)k[l].skill&&(DiabloCalc.skills[DiabloCalc.charClass][k[l].skill[0]].active&&a(DiabloCalc.getSkillBonus(k[l].skill,s),s,k[l].skill[0]),i.indexOf(k[l].skill[0])<0&&a(DiabloCalc.getSkillBonus(k[l].skill,s,"passive"),s,k[l].skill[0]));for(var e={},l=0;l<D.length;++l)D[l].passive&&!1!==DiabloCalc.passives[DiabloCalc.charClass][D[l].passive].active&&(e[D[l].passive]=!0,a(DiabloCalc.getPassiveBonus(D[l].passive,s),s,D[l].passive));if("monk"==DiabloCalc.charClass)for(var t=0;t<4;t++){var o=i[t];!s.skills[o]&&s.set_inna_4pc&&(s.skills[o]="x"),s.skills[o]&&a(DiabloCalc.getSkillBonus([o,s.skills[o]],s,"passive"),s,o)}s.extra_passive&&!e[s.extra_passive]&&DiabloCalc.passives[DiabloCalc.charClass][s.extra_passive]&&!1!==DiabloCalc.passives[DiabloCalc.charClass][s.extra_passive].active&&a(DiabloCalc.getPassiveBonus(s.extra_passive,s),s,s.extra_passive);var n=[];for(var c in m){if(h=m[c].getItemAffix()){var r=m[c].getItemAffixValue();s.affixes[h]={kanai:c,value:r};if(f=m[c].getInfo()){if(f[u="buffs"]&&!1!==f.active||(u="inactive"),u){if("function"==typeof f[u]){var p=[];void 0!==r&&p.push(r),d=f[u](p,s)}else d=f[u];a(d,s,m[c].getItemPair()),n.push(h)}}}}for(var h in s.affixes)if(!(n.indexOf(h)>=0)){var f=DiabloCalc.itemaffixes[h];if(f){var u="buffs";if(f[u]&&!1!==f.active||(u="inactive"),u){var d;a(d="function"==typeof f[u]?f[u](s.affixes[h].value,s):f[u],s,s.getAffixSource(h))}}}DiabloCalc.addPartyBuffs(s)},DiabloCalc.addPartyBuffs=function(s){function i(i,l){if(!1!==l.active||l.multiple){a(l.buffs(s),s,i)}}for(var l=0;l<DiabloCalc.partybuffs.length;++l)$.each(DiabloCalc.partybuffs[l].items,i),DiabloCalc.partybuffs[l].class&&$.each(DiabloCalc.partybuffs[l][DiabloCalc.partybuffs[l].class],i);$.each(DiabloCalc.followerbuffs,i),$.each(DiabloCalc.shrinebuffs,i)},DiabloCalc.isGemActive=function(s){return!1!==DiabloCalc.legendaryGems[s].active},u=$("<div></div>"),c.append(u),d=$('<div style="margin: 0 47px"></div>'),DiabloCalc.stashHeader.before(d),$(".editframe").on("tabsactivate",function(s,i){var l=i.newPanel.attr("id");"tab-skills"==l?(u.after(d),d.css("margin","0")):"tab-equipment"==l&&(DiabloCalc.stashHeader.before(d),d.css("margin","0 47px"))}),c.append('<h3 class="skill-category" style="margin-bottom: 5px">'+n("Group Buffs")+"</h3>"),c.append('<p class="change-note"><i>'+n("The calculator does not check for correct buff stacking.")+"</i></p>");var w=$('<div class="buff-tabs ui-helper-clearfix"></div>');c.append(w);var B=$("<ul></ul>");w.append(B);for(_=0;_<DiabloCalc.partybuffs.length;++_){P=$('<a href="#buff-'+_+'" class="icon-coop"></a>');B.append($("<li></li>").append(P));I=$('<div id="buff-'+_+'"></div>');w.append(I),x.push({index:_,header:P,tab:I,type:"party"})}P=$('<a href="#buff-followers" class="icon-followers"></a>');B.append($("<li></li>").append(P));I=$('<div id="buff-followers" class="class-miscbuffs"></div>');w.append(I),x.push({header:P,tab:I,type:"followers"});var P=$('<a href="#buff-shrines" class="icon-shrines"></a>');B.append($("<li></li>").append(P));var I=$('<div id="buff-shrines" class="class-miscbuffs"></div>');w.append(I),x.push({header:P,tab:I,type:"shrines"}),w.tabs(),w.find("li").removeClass("ui-corner-top").addClass("ui-corner-left");for(_=0;_<x.length;++_)x[_].tab=DiabloCalc.addScroll(x[_].tab,"y");w.find(".ui-tabs-panel"),t(),s(),c.mwheelIntent(o);for(var _=0;_<x.length;++_)x[_].tab.mwheelIntent(o);DiabloCalc.register("changeClass",s),DiabloCalc.register("updateStats",function(){function s(s){var i=s.getInfo();if(s.skillData&&i){var l={data:{}};t[i.name]=l;for(var a in s.skillData)"number"==typeof s.skillData[a].value&&(l.data[a]=s.skillData[a].value);return l}}function i(s){if(r.indexOf(s)>=0)return!1;if(!a.affixes.hasOwnProperty(s))return!1;var i=DiabloCalc.itemaffixes[s];if(!i.info&&void 0===i.active&&!i.params)return!1;if(!i.check)return!0;if("function"==typeof i.info){if(i.info(a.affixes[s].value,a))return!0}else if(i.info)return!0;if(void 0!==i.active||i.params)if("function"==typeof i.buffs){if(i.buffs(a.affixes[s].value,a))return!0}else if(i.buffs)return!0;return!1}for(var l,a=DiabloCalc.getStats(),e=DiabloCalc.charClass,t={},o=0;o<k.length;++o)k[o].update(),k[o].skill&&(l=s(k[o]))&&(l.skill=k[o].skill);for(o=0;o<D.length;++o)D[o].update(),(l=s(D[o]))&&(l.passive=D[o].passive);var n=DiabloCalc.getStats().extra_passive;if(n&&!DiabloCalc.passives[e][n]&&(n=null),n)for(o=0;o<D.length;o++)if(n==D[o].passive){n=null;break}b.setPassive(n),b.section.toggle(!!n),b.update(),(l=s(b))&&(l.passive=b.passive);var r=[];for(var p in m)m[p].update(),r.push(m[p].getItemAffix()),(l=s(m[p]))&&(l.kanai=m[p].getItemAffix());for(var h in DiabloCalc.legendaryGems)DiabloCalc.legendaryGems[h].line&&!a.gems.hasOwnProperty(h)&&(DiabloCalc.legendaryGems[h].line.line.remove(),delete DiabloCalc.legendaryGems[h].line);for(var f in a.gems)(h=DiabloCalc.legendaryGems[f]).line||(h.line=new DiabloCalc.SkillBox.gem(v,f)),h.line.update(),(l=s(h.line))&&(l.gem=f);v.toggle(!$.isEmptyObject(a.gems));for(var u in DiabloCalc.itemaffixes)DiabloCalc.itemaffixes[u].line&&!i(u)&&(DiabloCalc.itemaffixes[u].line.line.remove(),delete DiabloCalc.itemaffixes[u].line);var d=!1;for(var f in a.affixes)(u=DiabloCalc.itemaffixes[f])&&(u.kanai||(!u.line&&i(f)&&(u.line=new DiabloCalc.SkillBox.affix(C,f)),u.line&&(d=!0,u.line.update(),(l=s(u.line))&&(l.gem=f))));C.toggle(d),DiabloCalc.trigger("skillData",t),void 0!==g&&(c.scrollTop(g),g=void 0)}),DiabloCalc.register("updateParams",t),DiabloCalc.register("importEnd",t),DiabloCalc.register("updateSlotItem",function(s){"mainhand"===s&&(k.length>=1&&!k[0].skill&&k[0].setSkill(),k.length>=2&&!k[1].skill&&k[1].setSkill())})}();